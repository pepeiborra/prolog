module Language.Prolog.Semantics where

import Control.Monad

type Environment = [(VName, Term)]

eval :: Program -> Pred -> Environment
eval pgm p = do
  p'   <- instantiate p
  pgm' <- instantiate pgm
  let go [] = return ()
      go (p:_) = do
        (c,head :- goal) <- msum $ [ unify p h >> return c| c@(h:-t) <- pgm']
  go [p']